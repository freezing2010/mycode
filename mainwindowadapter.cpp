/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp com.deepin.dbus.demo.xml -i mainwindow.h -a mainwindowadapter
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "mainwindowadapter.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class DemoAdaptor
 */

DemoAdaptor::DemoAdaptor(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

DemoAdaptor::~DemoAdaptor()
{
    // destructor
}

bool DemoAdaptor::passed() const
{
    // get the value of property passed
    return qvariant_cast< bool >(parent()->property("passed"));
}

void DemoAdaptor::setPassed(bool value)
{
    // set the value of property passed
    parent()->setProperty("passed", QVariant::fromValue(value));
}

double DemoAdaptor::temperature() const
{
    // get the value of property temperature
    return qvariant_cast< double >(parent()->property("temperature"));
}

void DemoAdaptor::setTemperature(double value)
{
    // set the value of property temperature
    parent()->setProperty("temperature", QVariant::fromValue(value));
}

bool DemoAdaptor::methodPass(double temperature)
{
    // handle method call com.deepin.dbus.demo.methodPass
    bool out0;
    QMetaObject::invokeMethod(parent(), "methodPass", Q_RETURN_ARG(bool, out0), Q_ARG(double, temperature));
    return out0;
}

void DemoAdaptor::showResult(bool value)
{
    // handle method call com.deepin.dbus.demo.showResult
    QMetaObject::invokeMethod(parent(), "showResult", Q_ARG(bool, value));
}

